[gcode_macro ALIGN_Z]
description: Level Z against top stops (public macro). Don't use this, it may dissapear.
gcode:
    SAVE_GCODE_STATE NAME=public_align_z_state
    # ------------
    _ALIGN_Z
    # ------------
    RESTORE_GCODE_STATE NAME=public_align_z_state

[gcode_macro _ALIGN_Z]
description: Level Z against top stops (private macro).
gcode:
    SAVE_GCODE_STATE NAME=align_z_state
    # ------------

    {% set x_pos_max = printer.configfile.settings['stepper_x'].position_max %}
    {% set x_pos_min = printer.configfile.settings['stepper_x'].position_min %}
    {% set x_pos_centre = (x_pos_min + x_pos_max) / 2 %}

    {% set z_run_curr = printer.configfile.settings['tmc2209 stepper_z'].run_current %}
    {% set z_home_curr = z_run_curr %}
    {% set z_safe_curr = z_run_curr / 1.6 %}

    # TODO: Make relative to max height?
    {% set z_pos_max = printer.configfile.settings['stepper_z'].position_max %}
    #{% set z_pos_min = printer.configfile.settings['stepper_z'].position_min %}
    #{% set z_pos_centre = (z_pos_min + z_pos_max) / 2 %}

    RESPOND PREFIX="Info -" MSG="Aligning Z motors..."
    
    # Absolute positioning
    G90
    # Home unknown axes
    G28 O
    # Move to centre of X (if not already there
    G0 X{x_pos_centre}
    # Get close to top
    G0 Z208 F720
    # Tell some lies so we can crash into the ends
    SET_KINEMATIC_POSITION Z=205
    # Reduce current to prevent damage to frame
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={z_safe_curr}
    # Move up 5mm to align Z
    FORCE_MOVE STEPPER=stepper_z DISTANCE=5 VELOCITY=3 ACCEL=50
    # Move away from ends
    FORCE_MOVE STEPPER=stepper_z DISTANCE=-12 VELOCITY=12 ACCEL=50
    # Retorun to near reality
    SET_KINEMATIC_POSITION Z=200
    # Change current back to working levels
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={z_run_curr}
    # Pause to clear stall flags
    G4 P2000
    # Re-home Z
    G28 Z

    # ------------
    RESTORE_GCODE_STATE NAME=align_z_state