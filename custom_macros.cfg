[force_move]
enable_force_move: True

[gcode_macro test_a]
gcode:
    RESPOND PREFIX="Info -" MSG="{printer.toolhead.max_accel}"
    SET_VELOCITY_LIMIT ACCEL=500
    #RESPOND PREFIX="Info -" MSG="{printer.toolhead.max_accel}"
    #SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}
    #RESPOND PREFIX="Info -" MSG="{printer.toolhead.max_accel}"

[gcode_macro test_b]
gcode:
    RESPOND PREFIX="Info -" MSG="{printer.toolhead.max_accel}"
    #SET_VELOCITY_LIMIT ACCEL=500
    #RESPOND PREFIX="Info -" MSG="{printer.toolhead.max_accel}"
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}
    #RESPOND PREFIX="Info -" MSG="{printer.toolhead.max_accel}"

[gcode_macro G28]
description: Overriden G28 macro
rename_existing: G28.0
gcode:
    SAVE_GCODE_STATE NAME=custom_g28_state
    # ------------
    
    {% set x_run_curr = printer.configfile.settings['tmc2209 stepper_x'].run_current %}
    {% set y_run_curr = printer.configfile.settings['tmc2209 stepper_y'].run_current %}
    {% set z_run_curr = printer.configfile.settings['tmc2209 stepper_z'].run_current %}

    {% set x_home_curr = x_run_curr %}
    {% set y_home_curr = y_run_curr %}
    {% set z_home_curr = z_run_curr %}

    {% set x_safe_curr = x_run_curr/2 %}
    {% set y_safe_curr = y_run_curr/2 %}
    {% set z_safe_curr = z_run_curr/2 %}

    {% set x_pos_max = printer.configfile.settings['stepper_x'].position_max %}
    {% set x_pos_min = printer.configfile.settings['stepper_x'].position_min %}
    {% set x_pos_centre = (x_pos_min + x_pos_max) / 2 %}

    {% set y_pos_max = printer.configfile.settings['stepper_y'].position_max %}
    {% set y_pos_min = printer.configfile.settings['stepper_y'].position_min %}
    {% set y_pos_centre = (y_pos_min + y_pos_max) / 2 %}
    
    RESPOND PREFIX="Info -" MSG="Use G28.0 for base command"
    RESPOND PREFIX="Info -" MSG="Using overridden G28 macro"
    
    SET_VELOCITY_LIMIT ACCEL=500

    # Get axes to home
    {% set request_x_home = 1 if params.X is defined else 0 %}
    {% set request_y_home = 1 if params.Y is defined else 0 %}
    {% set request_z_home = 1 if params.Z is defined else 0 %}
    {% set request_o_home = 1 if params.O is defined else 0 %}

    # Axes to be homed
    RESPOND PREFIX="Info -" MSG="Requested X homing: {request_x_home}"
    RESPOND PREFIX="Info -" MSG="Requested Y homing: {request_y_home}"
    RESPOND PREFIX="Info -" MSG="Requested Z homing: {request_z_home}"

    # Get homed axes
    {% set existing_x_home = 1 if 'x' in printer.toolhead.homed_axes else 0 %}
    {% set existing_y_home = 1 if 'y' in printer.toolhead.homed_axes else 0 %}
    {% set existing_z_home = 1 if 'z' in printer.toolhead.homed_axes else 0 %}

    # Axes alredy homed
    RESPOND PREFIX="Info -" MSG="Existing X home: {existing_x_home}"
    RESPOND PREFIX="Info -" MSG="Existing Y home: {existing_y_home}"
    RESPOND PREFIX="Info -" MSG="Existing Z home: {existing_z_home}"

    # Which axes to home?
    {% if request_o_home == 1 %}
        # Home only untrusted axes
        RESPOND PREFIX="Info -" MSG="Homing all untrusted axes"
        {% set request_x_home = 1 if existing_x_home == 0 else 0 %}
        {% set request_y_home = 1 if existing_y_home == 0 else 0 %}
        {% set request_z_home = 1 if existing_z_home == 0 else 0 %}
    {% elif request_x_home == 0 and request_y_home == 0 and request_z_home == 0 %}
        # Home all axes
        RESPOND PREFIX="Info -" MSG="Homing all axes"
        {% set request_x_home = 1 %}
        {% set request_y_home = 1 %}
        {% set request_z_home = 1 %}
    {% endif %}

    # *Any* homing (X, Y, or Z) requires an existing homed (or pre-homed) Z
    {% set request_z_home = 1 if existing_z_home == 0 else request_z_home %}

    # Homing Z requires placing carriage at specific XY, so ensure those are homed if needed
    {% if request_z_home == 1 %}
        {% set request_x_home = 1 if existing_x_home == 0 else request_x_home %}
        {% set request_y_home = 1 if existing_y_home == 0 else request_y_home %}
    {% endif %}

    # Homing Y seems to require homing X first!?
    {% set request_x_home = 1 if request_y_home == 1 and existing_x_home == 0 else request_x_home %}

    # Axes to be homed
    RESPOND PREFIX="Info -" MSG="Required X homing: {request_x_home}"
    RESPOND PREFIX="Info -" MSG="Required Y homing: {request_y_home}"
    RESPOND PREFIX="Info -" MSG="Required Z homing: {request_z_home}"

    # Pre-home Z
    {% if existing_z_home == 0 %}
        RESPOND PREFIX="info" MSG="Pre-homing Z..."
        # Cautiously lift nozzle
        SET_TMC_CURRENT STEPPER=stepper_z CURRENT={z_safe_curr}
        G90
        SET_KINEMATIC_POSITION Z=0
        G1 Z12 F700
        SET_TMC_CURRENT STEPPER=stepper_z CURRENT={z_run_curr}
        G1 Z10 F700
        # Nozzle should now be atlest 10mm above the bed
        {% if existing_x_home == 1 %}
            # If X is homed, move to center (as that's safe)
            G1 X{x_pos_centre}
        {% else %}
            # Ensure probe is above plate
            # (this may involve bumping against frame)
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT={x_safe_curr}
            G90
            SET_KINEMATIC_POSITION X=0
            G1 X40 F700
            G1 X0 F700
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT={x_run_curr}
        {% endif %}
        G4 P2000
        # Should now be safe to prob bed for a temporary Z home
        G28.0 Z
        G0 Z10 F700
    {% endif %}
    # Z is now either homed, or pre-homed

    # Ensure Z at safe height
    {% if request_x_home == 1 or request_y_home == 1 %}
        G90 Z10
        {% if request_x_home == 1 %}
            RESPOND PREFIX="info" MSG="Homing X..."
            G90
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT={x_safe_curr}
            SET_KINEMATIC_POSITION X=0
            #G4 P2000
            G1 X10 F600
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT={x_home_curr}
            G4 P2000
            G28.0 X
            # Move away
            #G1 X{x_pos_centre} F1200
            G1 X20 F4800
            SET_TMC_CURRENT STEPPER=stepper_x CURRENT={x_run_curr}
        {% endif %}
        {% if request_y_home == 1 %}
            RESPOND PREFIX="info" MSG="Homing Y..."
            G90
            SET_TMC_CURRENT STEPPER=stepper_y CURRENT={y_safe_curr}
            SET_KINEMATIC_POSITION Y=0
            #G4 P2000
            G1 Y10 F600
            SET_TMC_CURRENT STEPPER=stepper_y CURRENT={y_home_curr}
            G4 P2000
            G28.0 Y
            # Move away
            #G1 Y{y_pos_centre} F1200
            G1 Y20 F4800
            SET_TMC_CURRENT STEPPER=stepper_y CURRENT={y_run_curr}
        {% endif %}
    {% endif %}

    # Now Z
    {% if request_z_home == 1 %}
        RESPOND PREFIX="info" MSG="Homing Z..."
        G91
        G0 Z2 F600
        G90
        G0 X{x_pos_centre} Y{y_pos_centre} F7200
        G28.0 Z
        G0 Z10 F600
    {% endif %}

    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}
    
    # ------------
    RESTORE_GCODE_STATE NAME=custom_g28_state

[gcode_macro _SAFE_Z_ENGAGE]
variable_z_lift = 2
variable_z_position = 0
gcode:
    SAVE_GCODE_STATE NAME=safe_z_engage_state
    G90
    SET_KINEMATIC_POSITION Z=0
    SET_GCODE_VARIABLE MACRO=_SAFE_Z_ENGAGE VARIABLE=z_position VALUE=0
    G0 Z{z_lift} F700
    SET_GCODE_VARIABLE MACRO=_SAFE_Z_ENGAGE VARIABLE=z_position VALUE={z_lift}
    RESTORE_GCODE_STATE NAME=safe_z_engage_state

[gcode_macro _SAFE_Z_DISENGAGE]
gcode:
    SAVE_GCODE_STATE NAME=safe_z_disengage_state
    G90
    SET_KINEMATIC_POSITION Z={printer["gcode_macro _SAFE_Z_ENGAGE"].z_position}
    G0 Z0 F700
    SET_GCODE_VARIABLE MACRO=_SAFE_Z_ENGAGE VARIABLE=z_position VALUE=0
    RESTORE_GCODE_STATE NAME=safe_z_disengage_state

[gcode_macro _HOME_X_UNSAFE]
gcode:
    SAVE_GCODE_STATE NAME=sl_home_x_unsafe_state
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set CURR_RUN = driver_config.run_current %}
    {% set CURR_HOME = 0.566 %}
    {% set CURR_PROTECT = 0.354 %}
    G90
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={CURR_PROTECT}
    SET_KINEMATIC_POSITION X=0
    G4 P2000
    G1 X5 F700
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={CURR_HOME}
    G4 P2000
    #G28 X
    #G99028 X
    G28 X
    # Move away
    G1 X10 F1200
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={CURR_RUN}
    RESTORE_GCODE_STATE NAME=sl_home_x_unsafe_state

[gcode_macro _HOME_Y_UNSAFE]
gcode:
    SAVE_GCODE_STATE NAME=sl_home_y_unsafe_state
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set CURR_RUN = driver_config.run_current %}
    {% set CURR_HOME = 0.566 %}
    {% set CURR_PROTECT = 0.354 %}
    G90
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={CURR_PROTECT}
    SET_KINEMATIC_POSITION Y=0
    G4 P2000
    G1 Y5 F700
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={CURR_HOME}
    G4 P2000
    #G28 Y
    #G99028 Y
    G28 Y
    # Move away
    G1 Y10 F1200
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={CURR_RUN}
    RESTORE_GCODE_STATE NAME=sl_home_y_unsafe_state

[gcode_macro HOME_X_SAFE]
gcode:
    SAVE_GCODE_STATE NAME=safe_x_home_state
    _SAFE_Z_ENGAGE
    _HOME_X_UNSAFE
    #G0 X10 F3600
    _SAFE_Z_DISENGAGE
    RESTORE_GCODE_STATE NAME=safe_x_home_state

[gcode_macro HOME_Y_SAFE]
gcode:
    SAVE_GCODE_STATE NAME=safe_y_home_state
    _SAFE_Z_ENGAGE
    _HOME_Y_UNSAFE
    #G0 Y10 F3600
    _SAFE_Z_DISENGAGE
    RESTORE_GCODE_STATE NAME=safe_y_home_state
